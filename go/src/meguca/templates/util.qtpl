{% import "meguca/lang" %}

Renders the tab selection butts in tabbed windows
{% func tabButts(names []string) %}{% stripspace %}
	<div class="tab-butts">
		{% for i, n := range names %}
			<a class="tab-link{% if i == 0 %}{% space %}tab-sel{% endif %}" data-id="{%d i %}">
				{%s n %}
			</a>
		{% endfor %}
	</div>
	<hr>
{% endstripspace %}{% endfunc %}

{% func expandLink(board, id string) %}{% stripspace %}
	{% code ln := lang.Get() %}
	<a class="thread-link expand-link" href="/{%s board %}/{%s id %}">
		{%s ln.Common.UI["expand"] %}
	</a>
{% endstripspace %}{% endfunc %}

{% func last100Link(board, id string) %}{% stripspace %}
	{% code ln := lang.Get() %}
	<a class="thread-link lastN-link" href="/{%s board %}/{%s id %}?last=100">
		{%s ln.Common.UI["last"] %} 100
	</a>
{% endstripspace %}{% endfunc %}

Notice widget, that reveals text on hover
{% func hoverReveal(tag, text, label string) %}{% stripspace %}
	{% if text == "" %}
		{% return %}
	{% endif %}
	<{%s tag %}{% space %}class="hover-reveal">
		<span class="act">
			{%s label %}
		</span>
		<span class="popup-menu">
			{%s text %}
		</span>
	</{%s tag %}>
{% endstripspace %}{% endfunc %}

Render pin signifying a thread is sticky
{% func renderSticky(sticky bool) %}{% stripspace %}
	{% if !sticky %}
		{% return %}
	{% endif %}
	<span class="sticky">
		<svg class="admin" xmlns="http://www.w3.org/2000/svg" width="8" height="8" viewBox="0 0 8 8">
			<path d="M1.34 0a.5.5 0 0 0 .16 1h.5v2h-1c-.55 0-1 .45-1 1h3v3l.44 1 .56-1v-3h3c0-.55-.45-1-1-1h-1v-2h.5a.5.5 0 1 0 0-1h-4a.5.5 0 0 0-.09 0 .5.5 0 0 0-.06 0z" />
		</svg>
	</span>
{% endstripspace %}{% endfunc %}
